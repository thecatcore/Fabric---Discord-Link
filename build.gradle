import net.fabricmc.loom.task.RemapJar

plugins {
	id 'fabric-loom' version '0.2.2-SNAPSHOT'
	id "com.github.johnrengelman.shadow" version "5.0.0"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

configurations {
    contained {
        transitive = true
    }
}

shadowJar {

	classifier = ""
	configurations = [project.configurations.contained]
}

task sourcesJar(type: Jar) {
	baseName = archivesBaseName
	classifier = "sources"
	from sourceSets.main.allSource
}

//If we're using shadow, we need to let remap know it's remapping the shadowJar
remapJar {
	dependsOn shadowJar
	jar = shadowJar.archivePath
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc:fabric:${project.fabric_version}"

	compile "org.javacord:javacord:${project.javacord_version}"
    contained "org.javacord:javacord:${project.javacord_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"
}

// configure the maven publication
// publishing {
// 	publications {
// 		mavenJava(MavenPublication) {
// 			// add all the jars that should be included when publishing to maven
// 			artifact(jar) {
// 				builtBy remapJar
// 			}
// 			artifact(sourcesJar) {
// 				builtBy remapSourcesJar
// 			}
// 		}
// 	}

// 	// select the repositories you want to publish to
// 	repositories {
// 		// uncomment to publish to the local maven
// 		// mavenLocal()
// 	}
// }
